#!/usr/bin/env bash

# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -o errexit -o errtrace -o nounset -o pipefail

WRAPPER_PATH="$(readlink -f "$0")"
PINENTRY_TTY="${TMPDIR:-${XDG_RUNTIME_DIR-}/tmp}/pinentry_tty"

# This directory is used for ssh multiplexing files and if it doesn't exist, ssh
# will fail.
mkdir -p -- "${HOME}/.ssh/sockets"
find "${HOME}/.ssh" -type f -print0 |
  xargs --null --no-run-if-empty chmod 600 --
find "${HOME}/.ssh" -type d -print0 |
  xargs --null --no-run-if-empty chmod 700 --

# Set the TTY for pinentry, see sensible-pinentry for motivation.
# NOTE: the tty command sometimes fails with "not a tty" even though the tty can
# be found using ps.
if tty="$(tty)" || tty="/dev/$(ps --no-headers -o 'tty' $$)"; then
  mkdir -p -- "$(dirname -- "${PINENTRY_TTY}")"
  printf '%s\n' "${tty}" >| "${PINENTRY_TTY}"
  # https://unix.stackexchange.com/a/280974
  # Note that exporting GPG_TTY should be done before calling updatestartuptty.
  export GPG_TTY="${tty}"
  gpg-connect-agent updatestartuptty /bye > /dev/null || true
fi

mapfile -t COMMAND < <(get-wrapped-binary-command "${WRAPPER_PATH}")
if ((${#COMMAND[@]} == 0)); then
  echo 1>&2 "Missing command: $(basename "${WRAPPER_PATH}")"
  exit 1
fi
exec -- "${COMMAND[@]}" "$@"
