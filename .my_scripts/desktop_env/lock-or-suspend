#!/usr/bin/env python3
# pylint: disable=invalid-name

import logging
import logging.handlers
import os
import threading

_LOG_FMT = '%(asctime)s %(levelname)s [%(filename)s:%(lineno)d] %(message)s'


def _init_logger():
    logger = logging.getLogger(__name__)
    logger.setLevel(logging.DEBUG)
    syslog_handler = logging.handlers.SysLogHandler(address='/dev/log')
    stdout_handler = logging.StreamHandler()
    formatter = logging.Formatter(_LOG_FMT)
    syslog_handler.setFormatter(formatter)
    stdout_handler.setFormatter(formatter)
    logger.addHandler(syslog_handler)
    logger.addHandler(stdout_handler)
    logger.info('Starting script %s', __file__)
    return logger


# pylint: disable=invalid-name
_logger = _init_logger()


def _is_triggered_from_xss_suspend():
    return 'XSS_SLEEP_LOCK_FD' in os.environ


def _suspend():
    os.system('systemctl suspend')


def _lock():
    lock_cmd = os.path.join(os.path.dirname(__file__), 'lock-screen')
    os.system(lock_cmd)


def _is_on_battery():
    power_supplies_dir = '/sys/class/power_supply'
    batteries = []
    for power_supply in os.listdir(power_supplies_dir):
        # Seems that the battery can appear in different names. See also:
        # https://askubuntu.com/a/309146
        if power_supply.lower() in ['bat0', 'bat1', 'battery']:
            batteries.append(power_supply)
    if not batteries:
        return False
    if len(batteries) > 1:
        _logger.warning('Found multiple batteries, using first one')
    battery = batteries[0]
    status_file_path = os.path.join(power_supplies_dir, battery, 'status')
    try:
        with open(status_file_path, encoding='utf-8') as f:
            status = f.read().strip().lower()
    except IOError as e:
        _logger.error('Error reading battery status: %s', e)
        return True
    _logger.info('Battery %s status: %s', battery, status)
    return status == 'discharging'


def main():
    locker_thread = threading.Thread(name='locker_thread', target=_lock)
    locker_thread.start()
    # I experimented with suspending even when on AC to save money on
    # electricity, but it caused issues when trying to wake up zeus18.
    # if not _is_triggered_from_xss_suspend():
    if _is_on_battery() and not _is_triggered_from_xss_suspend():
        _suspend()
    locker_thread.join()
    _logger.info('Finished script %s', __file__)


if __name__ == '__main__':
    main()
