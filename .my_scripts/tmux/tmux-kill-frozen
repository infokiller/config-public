#!/usr/bin/env python

import os
import socket
import subprocess
import sys

# TODO: reuse/merge with tmux-select-session to make the session selection
# consistent
SELECT_CMD = [
    'fzf',
    '--multi',
    '--height=40%',
    '--reverse',
    '--prompt=Session >',
    '--toggle-sort=ctrl-r',
    # pylint: disable-next=line-too-long
    "--preview=tmux list-windows -F '#{p15:#{=/12/...:window_name}} (#{window_panes} panes) #{#{=/20/...:pane_current_command}}' -t {1}",
    '--preview-window=right:60%',
]


def main():
    host_hist_dir = os.environ.get(
        'HOST_HIST_DIR',
        os.path.expanduser(
            os.path.join('~/.local/var/hist', socket.gethostname())))
    frozen_sessions = os.listdir(os.path.join(host_hist_dir, 'tmuxp'))
    frozen_sessions = [
        os.path.basename(os.path.splitext(session)[0])
        for session in frozen_sessions
    ]
    active_sessions = subprocess.run(
        ['tmux', 'list-sessions', '-F', '#{session_name}'],
        stdout=subprocess.PIPE,
        check=True,
        encoding='utf-8').stdout.splitlines()
    stdin = '\n'.join(sorted(set(active_sessions) & set(frozen_sessions)))
    p = subprocess.run(SELECT_CMD,
                       input=stdin,
                       stdout=subprocess.PIPE,
                       check=False,
                       encoding='utf-8')
    if p.returncode != 0:
        sys.exit(p.returncode)
    print(p.stdout.splitlines())


if __name__ == '__main__':
    main()
